{"version":3,"sources":["script.js"],"names":["darkButton","document","getElementById","lightButton","setDarkMode","querySelector","classList","localStorage","setItem","setLightMode","colorModeFromLocalStorage","getItem","colorModeFromPreferences","window","matchMedia","matches","loadAndUpdateColor","click","radioButtons","querySelectorAll","forEach","button","addEventListener","event","checked"],"mappings":"AAAA,aAAA,IAAMA,WAAaC,SAASC,eAAe,QACrCC,YAAcF,SAASC,eAAe,SAEtCE,YAAc,WAChBH,SAASI,cAAc,QAAQC,UAAY,OAC3CC,aAAaC,QAAQ,YAAa,OACtC,EAEMC,aAAe,WACjBR,SAASI,cAAc,QAAQC,UAAY,QAC3CC,aAAaC,QAAQ,YAAa,QACtC,EAEME,0BAA4B,WAC9B,OAAOH,aAAaI,QAAQ,YAChC,EAEMC,yBAA2B,WAC7B,OAAOC,OAAOC,WAAW,gCAAgCC,QAC3C,OACA,OAClB,EAEMC,mBAAqB,WAGd,SADKN,6BAA+BE,4BAC3BZ,WAAWiB,QAAUd,YAAYc,OACvD,EAGMC,aAAejB,SAASkB,iBAAiB,0BAC/CD,aAAaE,SAAQ,SAAAC,GACnBA,EAAOC,iBAAiB,SAAS,SAACC,GAChCvB,WAAWwB,QAAUpB,cAAgBK,cACvC,GACF,IAIAI,OAAOC,WAAW,gCACXQ,iBAAiB,UAAU,SAACC,GAC3BA,EAAMR,QAAUf,WAAWiB,QAAUd,YAAYc,OACnD,IAGND","file":"script.js","sourcesContent":["const darkButton = document.getElementById('dark');\nconst lightButton = document.getElementById('light');\n\nconst setDarkMode = () => {\n    document.querySelector('body').classList = 'dark';\n    localStorage.setItem('colorMode', 'dark');\n};\n\nconst setLightMode = () => {\n    document.querySelector('body').classList = 'light';\n    localStorage.setItem('colorMode', 'light');\n};\n\nconst colorModeFromLocalStorage = () => {\n    return localStorage.getItem('colorMode');\n};\n\nconst colorModeFromPreferences = () => {\n    return window.matchMedia('(prefers-color-scheme: dark)').matches \n                ? 'dark'\n                : 'light' // If preference is set or does not match anything (light is default)\n};\n\nconst loadAndUpdateColor = () => {\n    // local storage has precendence over the prefers-color-scheme\n    const color = colorModeFromLocalStorage() || colorModeFromPreferences();\n    color == 'dark' ? darkButton.click() : lightButton.click();\n};\n\n// when the inputs are clicked, check which radio button is checked and change the color\nconst radioButtons = document.querySelectorAll('.toggle__wrapper input');\nradioButtons.forEach(button => {\n  button.addEventListener('click', (event) => {\n    darkButton.checked ? setDarkMode() : setLightMode();\n  });\n});\n\n// when the prefers-color-scheme changes, this event will be emitted\n// event reflects the media query, if it matches, the new color is dark, else it is light\nwindow.matchMedia('(prefers-color-scheme: dark)')\n      .addEventListener('change', (event) => {\n        event.matches ? darkButton.click() : lightButton.click();\n      });\n      \n// Load the right color on startup - localStorage has precedence\nloadAndUpdateColor();"]}